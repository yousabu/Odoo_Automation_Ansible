---
- name: install postgresql14
  become: true
  hosts: postgres
  vars:
    postgres_version: "14"
    postgres_bin_path: "/usr/lib/postgres/{{ postgres_version }}/bin"
    postgres_data_dir: "/var/lib/postgresql/{{ postgres_version }}/main"
    ansible_ssh_pipelining: true
  tasks:
    - name: Set up Postgres 14 repo
      shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
      args:
        warn: no 
    - name: Install postgres14
      apt:
        name: postgresql-14
        update_cache: yes
        state: present


    - name: Update And Upgrade System
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
        upgrade: dist


    - name: Install required packages
      apt:
        name:
          - wget
          - python3-psycopg2
          - acl
          - postgresql-contrib
          - libpq-dev
        state: latest

    - name: Check if postgres is initialize
      stat:
        path: "{{ postgres_data_dir }}"
      register: init_stat

    - name: Insalize Postgres
      become: true
      become_user: postgres
      shell: "{{postgres_bin_path}}/initdb -D {{postgres_data_dir}}"
      when: not init_stat.stat.exists

    - name: Start and enable postgres
      service:
        name: postgresql
        state: started
        enabled: true


# CREATE USER FOR ODOO
- name: Create Odoo User To createDB
  hosts: postgres
  become: true
  become_method: sudo
  vars_files:
    - crid.yml
  tasks:
    - name: Utility Check
      ansible.builtin.package:
        name: python3-psycopg2
        state: present
      
    - name: Create User
      become: true
      become_method: sudo
      become_user: postgres
      community.postgresql.postgresql_user:
        state: present
        name: "{{username}}"
        password: "{{password}}"
        role_attr_flags: CREATEDB


# ALLOW REMOTE CONNECTION AND MD5 AUTH  
    - name: Utility present
      ansible.builtin.package:
        name: python3-psycopg2
        state: present

    - name: Allow Remote connection
      become: true
      ansible.builtin.lineinfile:
        path: /etc/postgresql/14/main/postgresql.conf
        regexp: "^#listen_addresses"
        line: listen_addresses = '*'
      notify: Restart postgresql

    - name: Allow md5 connection for db user/role
      community.postgresql.postgresql_pg_hba:
        dest: "/etc/postgresql/14/main/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{username}}"
        create: true
        source: all
      become: true
      become_method: sudo
      become_user: postgres
      notify: Restart postgresql

##############################
#     SETUP BACKUP SCRIPT    #
##############################
    - name: Setup backup Script For postgres databases
      ansible.builtin.template:
        src: autopostgresqlbackup.j2
        dest: /var/lib/postgresql/autopostgresqlbackup.sh
        owner: postgres
        mode: 0755
      
    - name: Create backup directory
      ansible.builtin.file:
        name: /backup
        group: postgres
        owner: postgres
        mode: 0755
        state: directory
    - name: Create databases directory
      ansible.builtin.file:
        name: /backup/databases
        group: postgres
        owner: postgres
        mode: 0755
        state: directory
    - name: Create weekly directory
      ansible.builtin.file:
        name: /backup/databases/weekly
        group: postgres
        owner: postgres
        mode: 0775
        state: directory
    - name: Create backup directory
      ansible.builtin.file:
        name: /backup/databases/daily
        group: postgres
        owner: postgres
        mode: 0775
        state: directory
    - name: Create monthly directory
      ansible.builtin.file:
        name: /backup/databases/monthly
        group: postgres
        owner: postgres
        mode: 0775
        state: directory


    - name: Crontab to run autopostgresqlbackup Script
      ansible.builtin.cron:
        name: postgres backup
        user: postgres
        weekday: "*"
        minute: "*"
        hour: "3"
        job: "/var/lib/postgresql/autopostgresqlbackup.sh"


######################################
  handlers:
    - name: Restart postgresql
      become: true
      become_method: sudo
      service:
        name: postgresql
        state: restarted
